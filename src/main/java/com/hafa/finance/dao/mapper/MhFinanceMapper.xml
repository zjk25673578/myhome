<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hafa.finance.dao.MhFinanceMapper">
  <resultMap id="BaseResultMap" type="com.hafa.finance.model.MhFinance">
    <id column="ids" jdbcType="INTEGER" property="ids" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="ftype" jdbcType="TINYINT" property="ftype" />
    <result column="cash" jdbcType="DECIMAL" property="cash" />
    <result column="createtype" jdbcType="INTEGER" property="createtype" />
    <result column="prodate" jdbcType="TIMESTAMP" property="prodate" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    ids, userid, ftype, cash, createtype, prodate, reason, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mh_finance
    where ids = #{ids,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mh_finance
    where ids = #{ids,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="ids" keyProperty="ids" parameterType="com.hafa.finance.model.MhFinance" useGeneratedKeys="true">
    insert into mh_finance (userid, ftype, cash, 
      createtype, prodate, reason, 
      status)
    values (#{userid,jdbcType=INTEGER}, #{ftype,jdbcType=TINYINT}, #{cash,jdbcType=DECIMAL}, 
      #{createtype,jdbcType=INTEGER}, #{prodate,jdbcType=TIMESTAMP}, #{reason,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyColumn="ids" keyProperty="ids" parameterType="com.hafa.finance.model.MhFinance" useGeneratedKeys="true">
    insert into mh_finance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="ftype != null">
        ftype,
      </if>
      <if test="cash != null">
        cash,
      </if>
      <if test="createtype != null">
        createtype,
      </if>
      <if test="prodate != null">
        prodate,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="ftype != null">
        #{ftype,jdbcType=TINYINT},
      </if>
      <if test="cash != null">
        #{cash,jdbcType=DECIMAL},
      </if>
      <if test="createtype != null">
        #{createtype,jdbcType=INTEGER},
      </if>
      <if test="prodate != null">
        #{prodate,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hafa.finance.model.MhFinance">
    update mh_finance
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="ftype != null">
        ftype = #{ftype,jdbcType=TINYINT},
      </if>
      <if test="cash != null">
        cash = #{cash,jdbcType=DECIMAL},
      </if>
      <if test="createtype != null">
        createtype = #{createtype,jdbcType=INTEGER},
      </if>
      <if test="prodate != null">
        prodate = #{prodate,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where ids = #{ids,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hafa.finance.model.MhFinance">
    update mh_finance
    set userid = #{userid,jdbcType=INTEGER},
      ftype = #{ftype,jdbcType=TINYINT},
      cash = #{cash,jdbcType=DECIMAL},
      createtype = #{createtype,jdbcType=INTEGER},
      prodate = #{prodate,jdbcType=TIMESTAMP},
      reason = #{reason,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where ids = #{ids,jdbcType=INTEGER}
  </update>
</mapper>
